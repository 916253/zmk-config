/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
    &kp TAB			&kp Q			&kp W			&kp E			&kp R			&kp T				&kp Y			&kp U			&kp I			&kp O			&kp P			&kp BSPC
	&kp LCTRL		&kp A			&kp S			&kp D			&kp F			&kp G				&kp H			&kp J			&kp K			&kp L			&kp SEMI		&kp SQT
	&kp LSHFT		&kp Z			&kp X			&kp C			&kp V			&kp B				&kp N			&kp M			&kp COMMA		&kp DOT			&kp SLASH		&kp RSHFT
													&kp LALT		&mo 1			&kp SPACE			&kp ENTER		&mo 2			&kp RALT
    
			>;
		};

		nav_layer {
			bindings = <
	&kp ESC			&kp 1			&kp 2			&kp 3			&kp 4			&kp 5				&kp 6			&kp 7			&kp 8			&kp 9			&kp 0			&kp DEL
	&trans			&trans			&trans			&trans			&trans			&trans				&kp LEFT		&kp DOWN		&kp UP			&kp RIGHT		&kp NON_US_HASH	&trans
	&trans			&kp NON_US_BSLH	&trans			&trans			&trans			&trans				&kp LG(LEFT)	&kp LG(DOWN)	&kp LG(UP)		&kp LG(RIGHT)	&trans			&trans
													&kp LWIN		&trans			&trans				&trans			&mo 3			&kp RALT
			>;
		};

		symbol_layer {
			bindings = <
	&trans			&kp LS(1)		&kp LS(2)		&kp LS(3)		&kp LS(4)		&kp LS(5)			&kp LS(6)		&kp LS(7)		&kp LS(8)		&kp LS(9)		&kp LS(0)		&trans
	&trans			&trans			&trans			&trans			&trans			&trans				&kp MINUS		&kp EQUAL		&kp LBKT		&kp RBKT		&kp NON_US_HASH &kp GRAVE
	&trans			&kp LS(NON_US_BSLH)	&trans		&trans			&trans			&trans				&kp LS(MINUS)	&kp LS(EQUAL)	&kp LS(LBKT)	&kp LS(RBKT)	&kp LS(NON_US_HASH) &kp LS(GRAVE)
													&kp LWIN		&mo 3			&trans				&trans			&trans			&trans
			>;
		};

		F_layer {
			bindings = <
	&kp F1			&kp F2			&kp F4			&kp F4			&kp F5			&kp F6				&kp F7			&kp F8			&kp F9			&kp F10			&kp F11			&kp F12
	&trans			&trans			&trans			&trans			&trans			&trans				&kp HOME		&kp PG_DN		&kp PG_UP		&kp END			&trans			&trans
	&trans			&trans			&trans			&trans			&trans			&trans				&trans			&trans			&trans			&trans			&trans			&trans
													&trans			&trans			&trans				&trans			&trans			&trans
			>;
		};

	};
};
